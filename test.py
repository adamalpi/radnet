from __future__ import division
from __future__ import print_function

import argparse
from datetime import datetime
import os
import tensorflow as tf
import time
import numpy as np
from radiation import RadNet

SAMPLES = 100
TEMPERATURE = 1.0
LOGDIR = './logdir'
DATA_DIRECTORY = './data'
OUTPUT_DIRECTORY = './climate_results'
STARTED_DATESTRING = "{0:%Y-%m-%dT%H-%M-%S}".format(datetime.now())



def write_pred_file(id_file, original, prediction, loss):
    results_dir = os.path.join(OUTPUT_DIRECTORY, STARTED_DATESTRING)
    if not os.path.exists(results_dir):
        os.makedirs(results_dir)
    with open(results_dir+'/'+str(id_file)+'.csv', 'w') as file:
        file.write(str(loss) + '\n')
        for ori, pred in zip(original, prediction):
            file.write(str(ori)+','+str(pred)+'\n')


def get_arguments():
    def _str_to_bool(s):
        """Convert string to bool (in argparse context)."""
        if s.lower() not in ['true', 'false']:
            raise ValueError('Argument needs to be a '
                             'boolean, got {}'.format(s))
        return {'true': True, 'false': False}[s.lower()]

    def _ensure_positive_float(f):
        """Ensure argument is a positive float."""
        if float(f) < 0:
            raise argparse.ArgumentTypeError(
                    'Argument must be greater than zero')
        return float(f)

    parser = argparse.ArgumentParser(description='RadNet test script')

    parser.add_argument(
        '--graph_location',
        type=str,
        default=DATA_DIRECTORY,
        help='The file in which the frozen graph is serialized')

    arguments = parser.parse_args()

    return arguments


def main():
    args = get_arguments()

    graph_full_radnet_path = "/Users/adam13/Documents/uni/TFM/logdir/train/2017-04-29T13-09-09/graph-frozen-radnet.pb"
    graph_full_radnet_path = args.graph_location

    humidity = [0.0019966731986580453, 0.0015420670911197025, 0.0012208759554168083, 0.0008309001632932015,
                0.0009970916136873287, 0.0007072266784644112, 0.00011602098055267022, 0.0007333482116891631,
                0.0003012118927912347, 0.00035616428100884967, 8.646997151783489e-05, 0.00012402908317572426,
                0.0005037531125819832, 2.8689568312658438e-05, 1.996376386158078e-05, 1.4303350183005105e-05,
                9.889341055848867e-07, 8.544604304148581e-09, 1.1383648878058661e-07, 1.8366370457716338e-08,
                1.0781581673817655e-08, 1.2513639678977276e-08, 1.9653475009919292e-10, 3.1780460429985196e-10,
                1.5721494974883484e-09, 1.1702945538146482e-10, 1.7582886820260912e-11, 1.4713492349898917e-09,
                3.5874797871791712e-09, 1.4784229327261286e-10, 6.839944653677745e-13, 9.359126936828571e-07]
    air_temperature = [206.668126975832, 202.09551712707693, 208.56330573933533, 200.46027164674888, 195.72935051635864,
                       192.70257272346396, 192.84944427658345, 197.42150237359286, 196.99065793660122,
                       189.12329079358986, 182.59031142625835, 185.95183131918907, 191.47750673895348,
                       178.60869206290596, 171.26954819127877, 169.48024686962177, 158.06357302842653,
                       142.83801517553843, 150.4681901871674, 144.67848419113844, 142.9896619717773, 143.88536311736172,
                       135.7523651827123, 133.1890044458063, 135.57086965263989, 129.1444520582399, 128.4846547961098,
                       136.25641384917026, 137.2229113450629, 130.57545792150356, 129.59467696040684,
                       149.93970346102213]

    real_radiation = [6.037945066746532, 2.1228856793235265, 0.8640300689689926, 0.6618190082806461,
                      0.5130473130154292, 0.3811269633019385, 0.25694085064029254, 0.10987118219723872,
                      0.008861691876843266, 0.11739100409387607, 0.20663198034698033, 0.07140419070477629,
                      -0.35027406116947035, 0.06726209095091104, 0.08840671365240325, -0.02640802504034214,
                      0.07425301417793244, 0.27522285162502996, 0.0198551347752886, 0.11234569358043611,
                      0.09377283500063857, 0.010228888329093343, 0.11451592796917073, 0.10823494740708535,
                      0.01005350757690271, 0.10595362060224307, 0.11087531461633414, -0.02115916479288688,
                      -0.03511322336147305, 0.07028039501188008, 0.09930397875821231, -0.3387499429930506]
    surface_temperature = 300.0
    CO2 = 0.0003




    """
    surface_temperature = 306.2712517163302
    CO2 = 0.0002586951549789216
    air_temperature = [306.5755582996547, 314.6489720419524, 303.0654579828024, 304.2953899034785, 304.5274719634671,
                         305.20238627267116, 311.7939170521857, 305.5140477648533, 306.5346398888812, 307.7364959441174,
                         309.3015806788706, 303.9676185610171, 304.32026630183617, 304.6666047007124,
                         307.09890183044826, 299.63982745578335, 303.24757618274106, 299.96995159598856,
                         308.1873029250751, 302.6805257534945, 299.75952629095593, 297.0306375652776, 302.9473806465603,
                         301.22716311312433, 299.5817629317276, 296.7429112805895, 296.09328779369906,
                         303.1580257647816, 295.6051237255963, 295.49398282366224, 291.7301710975555, 286.6624108064982,
                         296.8749660176758, 289.8694806307948, 287.5638049336402, 293.23091241938437,
                         283.09375369704765, 284.31567871125173, 278.3538176447394, 284.6817095595939,
                         285.39753587153155, 282.59955130184954, 277.8847248261851, 273.14621913628196,
                         272.1386633947481, 272.46083142431576, 272.10779373820105, 275.31047460240717,
                         268.38683712890577, 264.66497605316636, 262.94473750512026, 257.08894275733195,
                         259.4176779888912, 254.29219284767183, 258.6881410437285, 252.08654656895462,
                         255.0141023250016, 249.96067569629707, 250.75166839353116, 247.61989921917626,
                         245.35198242939276, 251.85356261476647, 247.63518688025192, 253.7961341424089,
                         245.28212722171895, 244.1172133075112, 248.1526892241412, 246.8697919375324,
                         243.24348850747586, 247.9034508884765, 241.92083204703968, 239.76093982422313,
                         244.23243964108573, 242.6778664691206, 231.64536223840295, 241.32728713386433,
                         235.7020539229097, 239.7476100574259, 235.11237317100958, 240.10213293533937,
                         241.9069776448988, 235.88873327721325, 234.8457194258936, 231.54010700817145,
                         236.71521555410558, 236.51152451018945, 251.1771974017153, 245.76320340529156,
                         241.00577204854724, 243.78958013247907, 236.32246700731557, 245.92674089428274,
                         244.30555572155342, 236.96877670143624, 240.61555777153131, 239.25686632179944]
    humidity = [24.924904054716723, 34.91290484208297, 21.35144190024909, 17.36987061727497, 13.226034328152835,
                  13.941526042115541, 32.36123726076213, 33.69504925306065, 22.272547721723875, 13.63898464653728,
                  20.580799588751685, 18.26383501488647, 12.109334997287771, 6.327961977324098, 2.496845120531683,
                  10.555635039607996, 32.2836735027765, 18.118666922349597, 5.528893924726466, 1.4351852614056313,
                  16.714274057563212, 16.917019898347863, 26.009349970101276, 28.292175228583485, 26.426617582890863,
                  12.80236794776724, 20.04819790029898, 0.08951670395742038, 11.471110357720246, 3.670481547791471,
                  14.94462045034998, 4.466017393214279, 0.40987940935083894, 15.763272751498297, 15.25755671430848,
                  17.94909358114068, 0.024137967213487585, 1.8046631590965578, 1.2102752620143167, 9.37583711247472,
                  3.237661558826059, 0.49817304677683766, 3.824682765867335, 2.2761466537522166, 4.0738411459650035,
                  6.537227243730676, 0.34772685888934074, 3.2347985723589514, 0.1615906906481482, 2.813588560693244,
                  2.9150107808883807, 1.8109465074211106, 2.182187183470105, 0.4666330454867997, 2.711903558961612,
                  0.8838001765276753, 1.8764326270612606, 1.020583908541619, 1.1962287983206545, 0.3282232244425036,
                  0.15971338829194237, 0.9637653054374912, 0.7443893718176918, 1.7171276305199463, 0.385330927528998,
                  0.3221775245317, 0.43093558425650785, 0.2389162563267689, 0.6313558520787744, 0.30768789566206695,
                  0.2888410937504238, 0.1173198112065059, 0.3663448404337706, 0.8019467918074148, 0.08033675079569316,
                  1.1088326951040695, 0.20156038015921487, 0.6201483066870375, 0.4757245744064905, 0.7682211695182888,
                  0.34972567679961053, 0.2331997567608876, 0.5416748659734937, 0.14151130621322497, 1.058481990947395,
                  0.1997745116191931, 2.8237291349458595, 0.7084292304150862, 1.6826463233839943, 1.8289286504576754,
                  0.6828390308132797, 0.735106448325732, 1.8260863039060733, 0.5728047369874212, 4.01491780056392,
                  6.98668076439157]

    # matrix that is generated in the good code
    data = [  2.58695160e-04,   3.06271240e+02,   1.64271688e+00,   1.53648245e+00,
    1.81631494e+00,   2.27714300e+00,   1.56724107e+00,   1.27149224e+00,
    1.59368765e+00,   9.76238668e-01,   1.59867799e+00,   6.68952346e-01,
    1.61319029e+00,   7.22009659e-01,   1.75492430e+00,   2.08792400e+00,
    1.61989176e+00,   2.18683290e+00,   1.64183700e+00,   1.33979690e+00,
    1.66767979e+00,   6.99574709e-01,   1.70133293e+00,   1.21434522e+00,
    1.58663976e+00,   1.04253066e+00,   1.59422255e+00,   5.86143434e-01,
    1.60166967e+00,   1.57425523e-01,   1.65397000e+00,  -1.26671091e-01,
    1.49358165e+00,   4.70928788e-01,   1.57115710e+00,   2.08217239e+00,
    1.50068009e+00,   1.03176570e+00,   1.67737329e+00,   9.81706083e-02,
    1.55896413e+00,  -2.05398515e-01,   1.49615550e+00,   9.27622914e-01,
    1.43747771e+00,   9.42657530e-01,   1.56470215e+00,   1.61689961e+00,
    1.52771330e+00,   1.78618264e+00,   1.49233317e+00,   1.64784205e+00,
    1.43129086e+00,   6.37535334e-01,   1.41732240e+00,   1.17485011e+00,
    1.56923151e+00,  -3.05186629e-01,   1.40682566e+00,   5.38815916e-01,
    1.40443587e+00,  -3.96400318e-02,   1.32350469e+00,   7.96394169e-01,
    1.21453547e+00,   1.93529595e-02,   1.43413043e+00,  -2.81430095e-01,
    1.28349531e+00,   8.57101381e-01,   1.23391771e+00,   8.19599986e-01,
    1.35577428e+00,   1.01919103e+00,   1.13780057e+00,  -3.10034782e-01,
    1.16407502e+00,  -1.77999869e-01,   1.03588045e+00,  -2.22076714e-01,
    1.17194557e+00,   3.83440822e-01,   1.18733764e+00,  -7.17358142e-02,
    1.12717402e+00,  -2.74882674e-01,   1.02579379e+00,  -2.82052346e-02,
    9.23904300e-01,  -1.43036991e-01,   9.02239382e-01,  -9.72888526e-03,
    9.09166813e-01,   1.72943607e-01,   9.01575625e-01,  -2.86039025e-01,
    9.70441103e-01,  -7.19481185e-02,   8.21565986e-01,  -2.99841970e-01,
    7.41536856e-01,  -1.03182964e-01,   7.04547524e-01,  -9.56619978e-02,
    5.78633606e-01,  -1.77533925e-01,   6.28707111e-01,  -1.50004551e-01,
    5.18496692e-01,  -2.77221531e-01,   6.13020301e-01,  -1.10723421e-01,
    4.71069872e-01,  -2.46286497e-01,   5.34019470e-01,  -1.72677800e-01,
    4.25358474e-01,  -2.36143291e-01,   4.42366749e-01,  -2.23118335e-01,
    3.75026047e-01,  -2.87485331e-01,   3.26260298e-01,  -2.99981177e-01,
    4.66060162e-01,  -2.40356684e-01,   3.75354767e-01,  -2.56624520e-01,
    5.07830203e-01,  -1.84491068e-01,   3.24758232e-01,  -2.83250511e-01,
    2.99709737e-01,  -2.87933648e-01,   3.86482328e-01,  -2.79868692e-01,
    3.58896911e-01,  -2.94107884e-01,   2.80922532e-01,  -2.65006512e-01,
    3.81123096e-01,  -2.89008111e-01,   2.52482176e-01,  -2.90405720e-01,
    2.06039205e-01,  -3.03124875e-01,   3.02187383e-01,  -2.84658402e-01,
    2.68760264e-01,  -2.52356321e-01,   3.15344520e-02,  -3.05867344e-01,
    2.39719510e-01,  -2.29599193e-01,   1.18763238e-01,  -2.96878010e-01,
    2.05752581e-01,  -2.65837610e-01,   1.06083661e-01,  -2.76547343e-01,
    2.13375703e-01,  -2.54857272e-01,   2.52184272e-01,  -2.85890818e-01,
    1.22777306e-01,  -2.94531792e-01,   1.00349955e-01,  -2.71656811e-01,
    2.92712077e-02,  -3.01330954e-01,   1.40548691e-01,  -2.33332962e-01,
    1.36168838e-01,  -2.97010452e-01,   4.51516658e-01,  -1.02430992e-01,
    3.35102558e-01,  -2.59291142e-01,   2.32806146e-01,  -1.87048033e-01,
    2.92664826e-01,  -1.76200449e-01,   1.32103637e-01,  -2.61188775e-01,
    3.38618994e-01,  -2.57312894e-01,   3.03759575e-01,  -1.76411226e-01,
    1.46000877e-01,  -2.69348383e-01,   2.24415585e-01,  -1.40983481e-02,
    1.95200399e-01,   2.06272840e-01,   0.00000000e+00,   0.00000000e+00]

    real_radiation = [3.48495793, -27.69290733,   9.73707199,   1.02422225,   1.43941414,
    3.36910915, -20.01979065,   0.21950752,  -2.63312674,  -2.4048171,
  -11.16297626,   2.06985402,  -1.17475319,  -1.01064086,  -7.0701952,
    8.91133595, -10.01253891,   5.09007788, -14.15297413,   0.83931202,
    2.64814162,   5.759202,   -13.29355049, -10.27482605, -10.83388996,
   -1.24612176,  -5.22411156,  -5.05762577,  -1.53861272,  -2.98636079,
   -2.13783884,   8.88230896,  -7.29479694,  -5.53666687,  -1.27343976,
  -29.98425484,   2.08556771,   0.53774369,   6.09460974,  -8.55292702,
   -7.79055595,  -1.6511693,   -0.37666908,   1.80421412,   0.4243311,
   -4.22115135,   0.23279935, -12.1893549,   0.39114395,   1.88035214,
   -2.39131236,   2.53933883,  -2.98253465,   2.28542376,  -5.34631252,
    2.126652,    -3.42608333,   1.20809162,  -1.25570166,   0.85203141,
    2.0462904,   -3.29230976,   1.67372143,  -7.21336746,   1.41751873,
    1.44341362,  -1.87453055,  -0.79739422,   1.36284959,  -2.73820353,
    0.8369143,    1.25498176,  -1.55841482,  -1.78342402,   2.86529374,
   -2.14630437,   1.41469133,  -1.31747591,   1.83281398,  -1.38886428,
   -2.16917944,   0.726174,     0.85079646,   1.47673941,   0.84448946,
    1.39103985, -12.55529785,  -2.05966043,  -0.98023808,  -4.6441865,
    1.15767002,  -3.99385357,  -5.4121418,   -0.64796311,  -8.07532883,
  -43.30358887]
    """

    input_dic = {
        "surface_temperature": surface_temperature,
        "CO2": CO2,
        "air_temperature": air_temperature,
        "humidity": humidity
    }
    number_of_layers = len(input_dic["air_temperature"])

    radnet = RadNet(graph_full_radnet_path)

    pred = radnet.predict(input_dic, number_of_layers)#.reshape(1, 1, -1)

    pred = np.array(pred)
    rad = np.array(real_radiation)

    print (rad)
    mse = ((pred - rad) ** 2).mean()
    print("mse {}".format(mse))

    print(number_of_layers)
    print("prediction")
    print(pred)
    print(len(pred))





    start_time = time.time()

    duration = time.time() - start_time
    print('{:10f} secs loading the model'.format(duration))

    # Code todo in __call__
    """
    for i in range(100):
        start_time = time.time()
        prediction = radnet.predict(input_dic)
        duration = time.time() - start_time
        print('{:10f} sec/prediction'.format(duration))

    print("my prediction")
    print(prediction)
    """

if __name__ == '__main__':
    main()